{"version":3,"sources":["services/persons.js","components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","request","axios","get","nonExisting","name","number","id","then","response","data","concat","newPerson","post","delete","newObject","put","Filter","props","value","onChange","handleSearch","PersonForm","onSubmit","handleSubmit","nameValue","handleNameChange","numberValue","handleNumberChange","type","Person","person","remove","onClick","Persons","list","map","i","Notification","message","toLowerCase","includes","className","style","color","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","searchTerm","setSearchTerm","searchResults","setSearchResults","notification","setNotification","notificationMsg","error","added","removed","updated","showNotification","setTimeout","useEffect","personService","namesToShow","filter","namesList","event","target","preventDefault","existingEntry","find","p","toLocaleLowerCase","window","confirm","catch","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bdf67df2.chunk.js","sourcesContent":["import axios from \"axios\";\nconst baseUrl = \"http://localhost:3001/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  /* Adding an entry to simulate error */\n  const nonExisting = {\n    name: \"Jimi Shoemaker\",\n    number: \"040-123456\",\n    id: 6000,\n  };\n  return request.then((response) => response.data.concat(nonExisting));\n};\n\nconst create = (newPerson) => {\n  const request = axios.post(baseUrl, newPerson);\n  return request.then((response) => response.data);\n};\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n  remove,\n  update,\n};\n","import React from \"react\";\n\nconst Filter = (props) => (\n  <div>\n    The search word is{\" \"}\n    <input value={props.value} onChange={props.handleSearch} />\n  </div>\n);\n\nexport default Filter;\n","import React from \"react\";\n\nconst PersonForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        name:\n        <input value={props.nameValue} onChange={props.handleNameChange} />\n      </div>\n      <div>\n        number:\n        <input value={props.numberValue} onChange={props.handleNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import React from \"react\";\n\nconst Person = ({ person, remove }) => {\n  return (\n    <li>\n      <p>\n        {person.name} {person.number}{\" \"}\n        <button onClick={() => remove(person)}>delete</button>\n      </p>\n    </li>\n  );\n};\n\nexport default Person;\n","import React from \"react\";\n\nimport Person from \"./Person\";\n\nconst Persons = ({ list, remove }) => {\n  return (\n    <ul>\n      {list.map((person, i) => (\n        <Person key={i} person={person} remove={remove} />\n      ))}\n    </ul>\n  );\n};\n\nexport default Persons;\n","import react from \"react\";\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  } else if (message.toLowerCase().includes(\"deleted\")) {\n    return <div className=\"error\">{message}</div>;\n  } else {\n    return (\n      <div className=\"error\" style={{ color: \"green\" }}>\n        {message}\n      </div>\n    );\n  }\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from \"react\";\nimport personService from \"./services/persons\";\n\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [notification, setNotification] = useState(null);\n\n  const notificationMsg = {\n    error: `info of ${newName} was already deleted`,\n    added: \"A person was added\",\n    removed: \"A person was removed\",\n    updated: \"Number was updated\",\n  };\n\n  /* Function for showing notifications */\n  const showNotification = (message) => {\n    setNotification(message);\n    setTimeout(() => {\n      setNotification(null);\n    }, 5000);\n  };\n\n  /* Getting all the names */\n  useEffect(() => {\n    personService.getAll().then((response) => {\n      setPersons(response);\n    });\n  }, []);\n\n  /* Filtering method */\n  useEffect(() => {\n    const namesToShow = persons.filter((person) =>\n      person.name.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n    setSearchResults(namesToShow);\n  }, [searchTerm]);\n\n  /* event handler for submitting form */\n  const addName = (event) => {\n    event.preventDefault();\n    /* Checking if the name existed and updating the number in case */\n    const existingEntry = persons.find(\n      (p) => p.name.toLowerCase() === newName.toLocaleLowerCase()\n    );\n    if (existingEntry) {\n      if (\n        window.confirm(\n          `${newName} is already in the list. Do you want to update the number?`\n        )\n      ) {\n        existingEntry.number = newNumber;\n        personService\n          .update(existingEntry.id, existingEntry)\n          .then((response) =>\n            setPersons(\n              persons.map((p) => (p.id !== existingEntry.id ? p : response))\n            )\n          )\n          .catch((error) => showNotification(notificationMsg[\"error\"]));\n        showNotification(notificationMsg[\"updated\"]);\n\n        setNewName(\"\");\n        setNewNumber(\"\");\n      }\n    } else {\n      /* adding the new entry */\n      const newObject = { name: newName, number: newNumber };\n      personService\n        .create(newObject)\n        .then((response) => setPersons(persons.concat(response)));\n      showNotification(notificationMsg[\"added\"]);\n      setNewName(\"\");\n      setNewNumber(\"\");\n    }\n  };\n\n  /* event handler for name input */\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  /* event handler for number input */\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  /* event handler for handling search */\n  const handleSearchInput = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  /* deleting one name */\n  const handleDelete = (person) => {\n    if (window.confirm(`Do you really want to delete ${person.name}?`)) {\n      personService\n        .remove(person.id)\n        .then(() => {\n          setPersons(persons.filter((p) => p.id !== person.id));\n          showNotification(notificationMsg[\"removed\"]);\n        })\n        .catch((error) => {\n          showNotification(notificationMsg[\"error\"]);\n        });\n    }\n  };\n\n  /* Assigning results conditionally */\n\n  let namesList = [];\n\n  if (searchTerm === \"\") {\n    namesList = [...persons];\n  } else {\n    namesList = [...searchResults];\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification} />\n      <Filter handleSearch={handleSearchInput} value={searchTerm} />\n      <h3>add a new</h3>\n      <PersonForm\n        handleSubmit={addName}\n        nameValue={newName}\n        numberValue={newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n      />\n      <h3>Numbers</h3>\n      <Persons list={namesList} remove={handleDelete} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}